@page "/"

<link rel="stylesheet" href="catalogueStyle.css" />

<PageTitle>Home</PageTitle>

<section class="catalogue" style="background-color: hsl(20, 50%, 98%);">
    <div class="row">
        <div class="col-sm-8">
            <h1 class="bold-text">Desserts</h1>
            <div id="catalogue-items" class="row">

            </div>
        </div>
        <div class="col-sm-4">
            <div class="user-cart">
                <h3 id="cart-title" class="highlight-text">Your Cart (0)</h3>
                <div id="cart-body"></div>
                <div id="cart-footer">

                </div>


            </div>
        </div>
    </div>
</section>

<div class="modal" id="end-order-modal" tabindex="-1" style="background-color: rgba(0,0,0,0.6); overflow-y: hidden;">
  <div class="modal-dialog">
    <div class="modal-content" style="margin:0 auto;">
        <div class="row">
            <img class="confirmed-icon" src="./assets/images/icon-order-confirmed.svg">
        </div>
        <div class="row">
            <h1 class="bold-text">Order Confirmed</h1>
        </div>
        <div class="row">
            <h6 class="extra-text-light">We hope you enjoy your food!</h6>
        </div>
        <br>
        <div class="modal-body">
            <div id="cart-modal-body" class="order-details">
            
            </div>
            <br>
            <div class="row">
                <div class="col d-flex justify-content-center">
                    <button class="confirm btn bold-text" onclick="submitOrder()">Start New Order</button>
                </div>
            </div>
        </div>
    </div>
  </div>
</div>


<script>
// Função para obter os produtos com uma chamada AJAX.
async function getProducts(){
    var products;
    await $.ajax({
        url: "http://localhost:5033/products/",
        method: "GET",
        contentType: "application/json",
        dataType: "json",
        success: function(data){
            products = data;
        }
    });
    return products;
}

// Função para obter o conteúdo do carrinho com uma chamada AJAX.
async function getCart(){
    var cart;
    await $.ajax({
        url: "http://localhost:5033/cart/",
        method: "GET",
        contentType: "application/json",
        dataType: "json",
        success: function(data){
            cart = data;
        }
    });
    return cart;
}

// Função para atualizar o catálogo da página.
function updateCatalogue(){
    let catalogue = document.getElementById("catalogue-items");
    let html = "";
    let j = 0;
    for(let i=0;i<productJSON.length;i++){
        if(cartJSON.find(order => order['product'] == productJSON[i]['name'])){
            let productOrder = cartJSON.find(order => order['product'] == productJSON[i]['name']);
            html += `
                    <div class="col-sm-4" style="padding: 2% 1% 2% 1%">
                        <div class="card product-card" style="width: 17rem;">
                            <img class="selected-product-image" src="${productJSON[i]['image']['desktop']}">

                            <div class="d-flex justify-content-center">
                                <div class="d-flex justify-content-center adjust-cart-quantity">
                                    <div class="col-3">
                                        <button class="btn" id="decrement-${productOrder['id']}" onclick="decrementQuantity(${productOrder['id']},${productOrder['quantity']},${productOrder['price']})">
                                            <img src="./assets/images/icon-decrement-quantity.svg">
                                        </button>
                                    </div>
                                    <div class="col-6 d-flex justify-content-center align-items-center bold-text">${productOrder['quantity']}</div>
                                        <div class="col-3 d-flex justify-content-end">
                                        <button class="btn" id="increment-${productOrder['id']}" onclick="incrementQuantity(${productOrder['id']},${productOrder['quantity']},${productOrder['price']})">
                                            <img src="./assets/images/icon-increment-quantity.svg">
                                        </button>
                                    </div>
                                </div>
                    `
        }
        else{
            html += `
                    <div class="col-sm-4" style="padding: 2% 1% 2% 1%">
                        <div class="card product-card" style="width: 17rem;">
                            <img class="product-image" src="${productJSON[i]['image']['desktop']}">

                            <div class="d-flex justify-content-center">
                                    <button class="add-to-cart btn bold-text" onclick="addProductToCart('${productJSON[i]['name']}',${productJSON[i]['price']})">
                                        <img src="./assets/images/icon-add-to-cart.svg">
                                        Add to Cart
                                    </button>
                    `;
        }
      
        html += `
                        </div>
                        <div class="card-body">
                            <h6 class="extra-text-light">${productJSON[i]['category']}</h6>
                            <h6 class="card-title bold-text">${productJSON[i]['name']}</h6>
                            <h6 class="highlight-text">$${productJSON[i]['price'].toFixed(2)}</h6>
                        </div>
                    </div>
                </div>
        `;
    }
    catalogue.innerHTML = html;
}

// Função para adicionar um produto ao carrinho com uma chamada AJAX.
// -> product: Nome do produto a ser adicionado ao carrinho;
// -> price: Preço do produto a ser adicionado ao carrinho.
function addProductToCart(product,price){
    let order = {"product":product,"price":price};
    $.ajax({
            url: "http://localhost:5033/cart/",
            method: "POST",
            contentType: "application/json",
            dataType: "json",
            data: JSON.stringify(order),
            success: function(data){
                cartJSON = data;
                console.log(cartJSON);
                updateCart();
                updateCatalogue();
            }
    });
}

// Função para remover um produto do carrinho com uma chamada AJAX.
// -> id: Id do produto no carrinho.
function removeProductFromCart(id){
    $.ajax({
            url: "http://localhost:5033/cart/" + id,
            method: "DELETE",
            contentType: "application/json",
            dataType: "json",
            success: function(data){
                cartJSON = data;
                console.log(cartJSON);
                updateCart();
                updateCatalogue();
            }
    });
}

// Função para incrementar por 1 a quantidade de um determinado produto no carrinho com recurso a uma chamada AJAX.
// A quantidade de um produto no carrinho só será incrementada enquanto esta for menor que 99.
// -> id: Id do produto no carrinho.
// -> currentQuantity: Quantidade atual do produto no carrinho.
// -> currentPrice: Preço atual do produto no carrinho.
function incrementQuantity(id,currentQuantity,currentPrice){
    if(currentQuantity < 99){
        $.ajax({
            url: "http://localhost:5033/cart/" + id,
            method: "PUT",
            contentType: "application/json",
            dataType: "json",
            data:JSON.stringify({"id": id,"product": "","price": currentPrice,"quantity": (currentQuantity+1)}),
            success: function(data){
                cartJSON = data;
                updateCart();
                updateCatalogue();
            }
        });
    }
}

// Função para decrementar por 1 a quantidade de um determinado produto no carrinho com recurso a uma chamada AJAX.
// A quantidade de um produto no carrinho só será decrementada enquanto esta for maior que 1.
// -> id: Id do produto no carrinho.
// -> currentQuantity: Quantidade atual do produto no carrinho.
// -> currentPrice: Preço atual do produto no carrinho.
function decrementQuantity(id,currentQuantity,currentPrice){
    if(currentQuantity > 1){
        $.ajax({
                url: "http://localhost:5033/cart/" + id,
                method: "PUT",
                contentType: "application/json",
                dataType: "json",
                data:JSON.stringify({"id": id,"product": "","price": currentPrice,"quantity": (currentQuantity-1)}),
                success: function(data){
                    cartJSON = data;
                    updateCart();
                    updateCatalogue();
                }
        });
    }
}

// Função para contar o total de produtos no carrinho.
function countCartProducts(){
    let totalProducts = 0;
    for(let i=0;i<cartJSON.length;i++){
        totalProducts += cartJSON[i]['quantity'];
    }
    return totalProducts;
}

// Função para atualizar o conteúdo do carrinho.
function updateCart(){
    let cartBody = document.getElementById("cart-body");
    let cartTitle = document.getElementById("cart-title");
    let totalPrice = 0;
    cartTitle.innerText = `Your Cart (${countCartProducts()})`
    let html = "";
    if (cartJSON.length > 0){
        for(let i=0;i<cartJSON.length;i++){
            totalPrice += (cartJSON[i]['quantity'] * cartJSON[i]['price']);
            html += `
                        <div class="row product-order">
                            <div class="col-10">
                                <div class="row">
                                    <h6 class="bold-text">${cartJSON[i]['product']}</h6>
                                </div>
                                <div class="row">
                                    <div class="col-2 highlight-text">${cartJSON[i]['quantity']}x</div>
                                    <div class="col-3 extra-text-light">$${cartJSON[i]['price'].toFixed(2)}</div>
                                    <div class="col-3 bold-text extra-text">$${(cartJSON[i]['quantity'] * cartJSON[i]['price']).toFixed(2)}</div>
                                    <div class="col-4"></div>
                                </div>
                            </div>
                            <div class="col-2 d-flex align-items-center">
                                <button class="remove-from-cart btn" onclick="removeProductFromCart(${cartJSON[i]['id']})">
                                    <img src="./assets/images/icon-remove-item.svg">
                                </button>
                            </div>
                        </div>
                        <hr style="background-color: hsl(7, 20%, 60%);">
                    `;
        }
    }
    else{
        html += `
                    <div class="row text-center">
                        <img class="center-block" src="./assets/images/illustration-empty-cart.svg" style="width:14rem; height:14rem; display:block; margin-left:auto; margin-right:auto;">
                        <p style="color:hsl(7, 20%, 60%)">Your added items will appear here</p>
                    </div>
        `;
    }
    cartBody.innerHTML = html;

    let cartFooter = document.getElementById("cart-footer");
    if (cartJSON.length === 0){cartFooter.innerHTML = "";}
    else{
        cartFooter.innerHTML =  `
                                    <div class="row align-items-center">
                                        <div class="col-6">
                                            Order Total
                                        </div>
                                        <div class="col-6 d-flex justify-content-end">
                                            <h2 class="bold-text">$${totalPrice.toFixed(2)}</h2>
                                        </div>
                                    </div>
                                    <div class="row d-flex justify-content-center">
                                        <div class="col-10 d-flex justify-content-center delivery-note">
                                            <img src="./assets/images/icon-carbon-neutral.svg">
                                            &nbspThis is a&nbspcarbon-neutral&nbspdelivery
                                        </div>
                                    </div>
                                    <br>
                                    <div class="row d-flex justify-content-center">
                                        <button class="confirm btn bold-text" onclick="openModal('end-order-modal')">Confirm Order</button>
                                    </div>
                                `;
    }
}

// Método para atualizar o conteúdo da modal consoante o conteúdo do carrinho.
function addOrderToModal(){
    let modalBody = document.getElementById("cart-modal-body");
    let html = "";
    let totalPrice = 0;
    for(let i=0; i<cartJSON.length;i++){
        totalPrice += (cartJSON[i]['quantity'] * cartJSON[i]['price']);
        let img = productJSON.find(product => product['name'] == cartJSON[i]['product'])['image']['thumbnail'];
        html +=  `
                    <div class="row">
                        <div class="col-3">
                            <img class="product-thumbnail" src="${img}">
                        </div>
                        <div class="col-6">
                            <div class="row">
                                <div class="col-12 bold-text">${cartJSON[i]['product']}</div>
                            </div>
                            <div class="row">
                                <div class="col-2 highlight-text">${cartJSON[i]['quantity']}x</div>
                                <div class="col-10 extra-text-light">&#64;$${cartJSON[i]['price'].toFixed(2)}</div>
                            </div>
                        </div>
                        <div class="col-3 bold-text">
                            $${(cartJSON[i]['quantity'] * cartJSON[i]['price']).toFixed(2)}
                        </div>
                        
                    </div>
                    <hr style="background-color: hsl(7, 20%, 60%);">
                    
                `;
    }
    html += `
                <div class="row align-items-center">
                    <div class="col-6">Order Total</div>
                    <div class="col-6 d-flex justify-content-end">
                        <h2 class="bold-text">$${totalPrice.toFixed(2)}</h2>
                    </div>
                </div>
            `
    modalBody.innerHTML = html;
}

// Função para abrir uma modal.
// -> targetModal: ID da modal a ser fechada.
function openModal(targetModal){
    let modal = document.getElementById(targetModal);
    modal.style.display = "block";
    $('body, html').css('overflow', 'hidden');
    addOrderToModal();
}

// Função para fechar uma modal.
// -> targetModal: ID da modal a ser fechada.
function closeModal(targetModal){
    let modal = document.getElementById(targetModal);
    modal.style.display = "none";
    $('body, html').css('overflow', 'auto');
}

// Função para submeter uma ordem com recurso a uma chamada AJAX.
// Quando uma ordem é submetida o conteúdo do carrinho é apagado.
function submitOrder(){
    $.ajax({
        url: "http://localhost:5033/cart/",
        method: "DELETE",
        contentType: "application/json",
        dataType: "json",
        success: function(data){
            closeModal("end-order-modal");
            cartJSON = data;
            updateCart();
            getProducts().then((result) => {
                productJSON = result;
                updateCatalogue();
            });
            
        }
    });
}

var cartJSON, productJSON;
getCart().then((result) => {
    cartJSON = result;
    updateCart();
});

getProducts().then((result) => {
    productJSON = result;
    updateCatalogue();
});
</script>